{"version":3,"sources":["components/Header.js","components/Description.js","components/SearchBar.js","components/ClearQuery.js","components/CheckMarkLabel.js","components/DropdownLabel.js","components/CheckMarkLanguage.js","components/DropdownLanguage.js","components/DropdownSort.js","components/ResultsHeader.js","components/Labels.js","components/ResultsList.js","components/Spinner.js","components/NoResults.js","components/BlankSlate.js","App.js","index.js","config/keys.js"],"names":["Header","react_default","a","createElement","Navbar_default","bg","variant","Brand","href","Description","className","SearchBar","props","searchIssues","input","searchInput","Form_default","onSubmit","InputGroup_default","FormControl_default","value","onChange","placeholder","aria-label","aria-describedby","Append","Button_default","onClick","ClearyQuery","clearSearchbar","CheckMarkLabel","passID","currentLabel","searchedLabel","concat","data-id","DropdownLabel","searchByLabel","DropdownItem","map","label","Dropdown_default","Item","key","as","components_CheckMarkLabel","DropdownButton_default","id","title","CheckMarkLanguage","currentLanguage","searchedLanguaged","DropdownLanguage","searchByLanguage","DropdownItems","language","components_CheckMarkLanguage","DropdownSort","ResultsHeader","totalCount","Card_default","components_DropdownLabel","components_DropdownLanguage","components_DropdownSort","Labels","LabelsList","labels","style","backgroundColor","color","name","ResultsList","results","issuesReturn","items","item","html_url","components_Labels","body","number","text","date","Date","toString","monthDateSlice","slice","yearSlice","displayDate","created_at","user","login","comments","Spinner","react_loader_spinner_default","type","height","width","NoResults","BlankSlate","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","issues","issuesCount","returnedAPI","spinner","errorMessage","setState","_this2","axios","get","Keys","clientID","clientSecret","then","res","console","log","data","total_count","toLocaleString","err","message","event","target","_this3","dataset","searchNormal","_this4","_this5","ResultsListRender","showSpinner","callAPI","preventDefault","components_ResultsList","components_Spinner","components_NoResults","components_BlankSlate","_this6","ClearQuery","_this7","components_Header","components_Description","components_SearchBar","search","QueryRender","components_ResultsHeader","Component","ReactDOM","render","src_App_0","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.335e6b66.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\n\nconst Header = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"#home\">Issues Hunt</Navbar.Brand>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Description = () => {\n  return (\n    <div className=\"description\">\n      <div className=\"description-wrapper\">\n        <p>\n          Issues Hunt can help potential first-time contributors discover issues.\n          Try searching for issues labeled with <span className=\"issue-label help-wanted\">help wanted</span> or <span className=\"issue-label good-first-issue\">good first issue</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Description;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nconst SearchBar = (props) => {\n  const { searchIssues, input, searchInput } = props;\n\n  return (\n    <Form\n      className=\"SearchBar\"\n      onSubmit={searchIssues}\n      >\n      <InputGroup>\n        <FormControl\n          value={input}\n          onChange={searchInput}\n          placeholder=\"Search all issues..\"\n          aria-label=\"Search Input\"\n          aria-describedby=\"basic-addon2\"\n        />\n        <InputGroup.Append>\n          <Button\n            className=\"search-button\"\n            onClick={searchIssues}\n            >\n            Search\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </Form>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nconst ClearyQuery = (props) => {\n  const { clearSearchbar } = props;\n\n  return(\n    <div className=\"clear-query-container\">\n      <div\n        className=\"query-item\"\n        onClick={clearSearchbar}>\n        Clear search query and filters <i className=\"far fa-times-circle\"></i>\n      </div>\n    </div>\n  );\n}\n\nexport default ClearyQuery;\n","import React from 'react';\n\nconst CheckMarkLabel = (props) => {\n  const {\n    passID,\n    currentLabel,\n    searchedLabel\n  } = props;\n  \n  //add quotes to match props incoming from search query\n  //return check mark only if state matches current chosen label\n  if(`\"${currentLabel}\"` === searchedLabel) {\n    return (\n      <div data-id={passID}>\n        <i className=\"fas fa-check\"></i>\n      </div>\n    );\n  }\n  //return empty div as default\n  return (\n    <div\n      data-id={passID}\n      className=\"icon-box\"\n      >\n    </div>\n  );\n}\n\nexport default CheckMarkLabel;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport CheckMarkLabel from './CheckMarkLabel';\n\nconst DropdownLabel = (props) => {\n  //multiword search need a plus sign in query string\n  const labelNames = [\n    ['good+first+issue', 'Good First Issue'],\n    ['help+wanted', 'Help Wanted'],\n    ['discussion', 'Discussion'],\n    ['bug', 'Bug'],\n    ['hacktoberfest', 'Hacktoberfest']\n  ];\n\n  const { searchByLabel, searchedLabel } = props;\n\n  const DropdownItem = labelNames.map(label =>\n    <Dropdown.Item\n      key={label[0]}\n      as=\"button\"\n      data-id={label[0]}\n      onClick={searchByLabel}>\n      <div className=\"checkmark-list-wrapper\">\n        <div className=\"checkmark-wrapper\">\n          <CheckMarkLabel\n            passID={label[0]}\n            searchedLabel={searchedLabel}\n            currentLabel={label[0]}/>\n        </div>\n        <div\n          data-id={label[0]}\n          className=\"dropdown-text-wrapper\">\n          {label[1]}\n        </div>\n      </div>\n    </Dropdown.Item>\n  );\n\n  return(\n    <DropdownButton\n      id=\"LabelDropdown\"\n      title=\"Label\"\n      className=\"DropdownButton\">\n      {DropdownItem}\n    </DropdownButton>\n  );\n}\n\nexport default DropdownLabel;\n","import React from 'react';\n\nconst CheckMarkLanguage = (props) => {\n  const {\n    currentLanguage,\n    searchedLanguaged,\n    passID,\n  } = props;\n\n  //return check mark only if state matches current chosen language\n  if(currentLanguage === searchedLanguaged) {\n    return (\n      <div\n        data-id={passID}>\n        <i className=\"fas fa-check\"></i>\n      </div>\n    );\n  }\n  //return empty div as default\n  return (\n    <div\n      data-id={passID}\n      className=\"icon-box\">\n    </div>\n  );\n}\n\nexport default CheckMarkLanguage;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport CheckMarkLanguage from './CheckMarkLanguage';\n\nconst DropdownLanguage = (props) => {\n  const languageNames = [\n    'JavaScript',\n    'Python',\n    'Java',\n    'HTML',\n    'CSS',\n    'Ruby',\n    'C#',\n    'PHP',\n    'C++',\n  ];\n\n  const {\n    searchByLanguage,\n    searchedLanguaged,\n  } = props;\n\n//conditional rendering for checkmark in dropdown list\n  const DropdownItems = languageNames.map(language =>\n    <Dropdown.Item\n      key={language}\n      data-id={language}\n      onClick={searchByLanguage}>\n      <div className=\"checkmark-list-wrapper\">\n        <div className=\"checkmark-wrapper\">\n          <CheckMarkLanguage\n            passID={language}\n            searchedLanguaged={searchedLanguaged}\n            currentLanguage={language}/>\n        </div>\n        <div\n          data-id={language}\n          className=\"dropdown-text-wrapper\">\n          {language}\n        </div>\n      </div>\n    </Dropdown.Item>\n  );\n\n  return(\n    <DropdownButton\n      id=\"LanguageDropdown\"\n      title=\"Language\"\n      className=\"DropdownButton\">\n      {DropdownItems}\n    </DropdownButton>\n  );\n}\n\nexport default DropdownLanguage;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport CheckMarkLanguage from './CheckMarkLanguage';\n//create sort checkmark\n\nconst DropdownSort = (props) => {\n  const sortOptions = [\n    'Best Match (default)',\n    'Newest',\n    'Oldest',\n    'Recently Created',\n    'Recently Updated',\n    'Least Recently Updated',\n    'Most Comments',\n    'Least Commented',\n    'Most Reactions'\n  ];\n\n  const {\n    searchByLanguage,\n    searchedLanguaged,\n  } = props;\n\n//conditional rendering for checkmark in dropdown list\n  const DropdownItems = sortOptions.map(language =>\n    <Dropdown.Item\n      key={language}\n      data-id={language}\n      onClick={searchByLanguage}>\n      <div className=\"checkmark-list-wrapper\">\n        <div className=\"checkmark-wrapper\">\n          <CheckMarkLanguage\n            passID={language}\n            searchedLanguaged={searchedLanguaged}\n            currentLanguage={language}/>\n        </div>\n        <div\n          data-id={language}\n          className=\"dropdown-text-wrapper\">\n          {language}\n        </div>\n      </div>\n    </Dropdown.Item>\n  );\n\n  return(\n    <DropdownButton\n      id=\"Dropdownsort\"\n      title=\"Sort\"\n      className=\"DropdownButton\">\n      {DropdownItems}\n    </DropdownButton>\n  );\n}\n\nexport default DropdownSort;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport DropdownLabel from './DropdownLabel';\nimport DropdownLanguage from './DropdownLanguage';\nimport DropdownSort from './DropdownSort';\n\nconst ResultsHeader = (props) => {\n  const {\n    totalCount,\n    searchedLabel,\n    searchByLabel,\n    searchedLanguaged,\n    searchByLanguage,\n  } = props;\n\n  return (\n    <Card className=\"ResultsHeader\">\n      <div className=\"open-issues\">\n        <i className=\"fas fa-exclamation-circle\"></i> {totalCount} Open\n      </div>\n      <DropdownLabel\n        searchedLabel={searchedLabel}\n        searchByLabel={searchByLabel}/>\n      <DropdownLanguage\n        searchedLanguaged={searchedLanguaged}\n        searchByLanguage={searchByLanguage} />\n      <DropdownSort />\n    </Card>\n  );\n}\n\nexport default ResultsHeader;\n","import React from 'react';\n\nconst Labels = (props) => {\n  const LabelsList = props.labels.map( label =>\n    <div\n      key={label.id}\n      style={{\"backgroundColor\": \"#\" + label.color}}\n      className=\"issue-label\">\n      {label.name}\n    </div>\n  );\n\n  return (\n    <div className=\"issues-label-container\">\n      {LabelsList}\n    </div>\n  );\n}\n\nexport default Labels;\n\n// item.\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Labels from './Labels.js';\n\nconst displayDate = (text) => {\n  let date = new Date('2019-02-03T17:44:55Z').toString();\n  let monthDateSlice = date.slice(4,10);\n  let yearSlice = date.slice(11,15);\n  return `${monthDateSlice}, ${yearSlice}`;\n}\n//adjust container at different screen sizes\nconst ResultsList = (props) => {\n  const results = props.issuesReturn.items.map(item =>\n    <Card key={item.id}>\n      <div className=\"issues-container\">\n        <div className=\"exclamation\">\n          <i className=\"fas fa-exclamation-circle\"></i>\n        </div>\n        <div className=\"title-description-container\">\n          <div className=\"issues-label-wrapper\">\n            <p className=\"issues-title\">\n              <span className=\"issues-github-link\"></span>\n              <a href={item.html_url}>{item.title}</a>\n            </p>\n            <Labels labels={item.labels}/>\n          </div>\n          <div className=\"issues-body\">\n            <p className=\"issues-body-text\">{item.body}...</p>\n          </div>\n          <p className=\"issues-description\">\n            #{item.number} opened on {displayDate(item.created_at)} by <a href={item.user.html_url}>{item.user.login}</a>\n          </p>\n        </div>\n        <div className=\"comments\">\n          <a\n            className=\"comments-link\"\n            href={item.html_url}>\n            <i className=\"far fa-comment-alt\"></i> {item.comments}\n          </a>\n        </div>\n      </div>\n    </Card>\n  );\n\n  return (\n    <div className=\"results-list\">\n      {results}\n    </div>\n  );\n}\n\nexport default ResultsList;\n","import React from 'react';\nimport Loader from 'react-loader-spinner'\n\nconst Spinner = () => {\n  return (\n    <div className=\"blank-container\">\n      <div className=\"spinner-container\">\n        <Loader\n          type=\"TailSpin\"\n          color=\"#00BFFF\"\n          height=\"75\"\n          width=\"75\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React from 'react';\n\nconst NoResults = () => {\n  return(\n    <div className=\"blank-container\">\n      <h4>\n        Your search returned no results. Try again.\n      </h4>\n    </div>\n  );\n}\n\nexport default NoResults;\n","import React from 'react';\n\nconst BlankSlate = () => {\n  return(\n    <div className=\"black-slate\">\n    </div>\n  );\n}\n\nexport default BlankSlate;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Keys from './config/keys';\n\nimport Header from './components/Header';\nimport Description from './components/Description';\nimport SearchBar from './components/SearchBar';\nimport ClearQuery from './components/ClearQuery';\nimport ResultsHeader from './components/ResultsHeader'\nimport ResultsList from './components/ResultsList';\nimport Spinner from './components/Spinner';\nimport NoResults from './components/NoResults';\nimport BlankSlate from './components/BlankSlate';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issues: '',\n      issuesCount: \"0\",\n      returnedAPI: 'no',\n      spinner: 'hide',\n      errorMessage: '',\n      input:'',\n      language:'',\n      label:'',\n    };\n  }\n\n  showSpinner() {\n    this.setState({\n      returnedAPI:'pending',\n      spinner: 'show',\n    });\n  }\n\n  callAPI() {\n    const value = this.state.input;\n    const language = this.state.language;\n    const label = this.state.label;\n    axios.get(`https://api.github.com/search/issues?q=${value}+state:open+label:${label}+language:${language}&client_id=${Keys.clientID}&client_secret=${Keys.clientSecret}`)\n     .then(res => {\n       console.log(res.data);\n       this.setState({\n         issues: res.data,\n         issuesCount: res.data.total_count.toLocaleString(), //returns a language-sensitive represenation of string\n         returnedAPI: 'yes',\n         spinner: 'hide',\n       });\n     },\n     err => {\n       console.log(err.message);\n       this.setState({errorMessage: err.message});\n     })\n  }\n\n  //hold value in searchbar\n  searchInput(event) {\n    this.setState({input: event.target.value});\n  }\n\n  //set the state as soon as mouse hovers dropdown\n  //then use state values to make API call\n  //quotes are used for search query\n  searchByLabel(event) {\n    this.setState({\n      label: `\"${event.target.dataset.id}\"`\n    },\n      () => this.searchNormal()\n    );\n  }\n\n  searchByLanguage(event) {\n    console.log(event.target.dataset.id);\n    this.setState({\n      language: event.target.dataset.id\n    },\n      () => this.searchNormal()\n    );\n  }\n\n  clearSearchbar() {\n    this.setState({\n      issues: '',\n      issuesCount: \"0\",\n      input: '',\n      language: '',\n      label: '',\n    },\n      () => this.ResultsListRender()\n    );\n  }\n\n  //event.preventDefault not working in callback\n  searchNormal() {\n    this.showSpinner();\n    this.callAPI();\n  }\n\n  //only search for open issues\n  search(event) {\n    event.preventDefault();\n    this.showSpinner();\n    this.callAPI();\n  }\n\n  ResultsListRender() {\n    if (this.state.returnedAPI === 'yes' && this.state.issues !== '') {\n      return <ResultsList issuesReturn={this.state.issues}/>;\n    }\n    if (this.state.spinner ==='show' && this.state.returnedAPI !== 'yes' ) {\n      return <Spinner />;\n    }\n    if (this.state.issuesCount === \"0\") {\n      return <NoResults />;\n    } if (this.state.issues === '') {\n      return <BlankSlate />;\n    }\n    return <BlankSlate />;\n  }\n\n  QueryRender() {\n    if (this.state.input !== '' || this.state.language !== '' || this.state.label !== '' || this.state.issues !== '') {\n      return <ClearQuery clearSearchbar={event => this.clearSearchbar(event)} />;\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <Description />\n          <SearchBar\n            searchInput={event => this.searchInput(event)}\n            searchIssues={event => this.search(event)}\n            input={this.state.input}\n          />\n          {this.QueryRender()}\n          <ResultsHeader\n            searchedLabel={this.state.label}\n            searchedLanguaged={this.state.language}\n            totalCount={this.state.issuesCount}\n            searchByLabel={event => this.searchByLabel(event)}\n            searchByLanguage={event => this.searchByLanguage(event)}\n          />\n          {this.ResultsListRender()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","//production keys, do commit\n\nmodule.exports = {\n  clientID: '19b336af5cfb0ed688a1',\n  clientSecret:'4849a46d86d872e9fb533a298664a16e4ee5e9cd'\n};\n"],"sourceRoot":""}