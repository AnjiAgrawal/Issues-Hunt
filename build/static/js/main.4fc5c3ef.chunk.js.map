{"version":3,"sources":["components/Header.js","components/Description.js","components/SearchBar.js","components/ClearQuery.js","components/CheckMarkLabel.js","components/DropdownLabel.js","components/CheckMarkLanguage.js","components/DropdownLanguage.js","components/CheckMarkSort.js","components/DropdownSort.js","components/ResultsHeader.js","components/Labels.js","components/ResultsList.js","components/Welcome.js","components/NoResults.js","components/PaginationWidgetNumber.js","components/PaginationWidget.js","components/Footer.js","components/Spinner.js","App.js","index.js","config/keys.js"],"names":["Header","react_default","a","createElement","Navbar_default","bg","variant","Brand","href","Description","className","SearchBar","props","searchIssues","input","searchInput","Form_default","onSubmit","InputGroup_default","FormControl_default","value","onChange","placeholder","aria-label","aria-describedby","Append","Button_default","onClick","ClearyQuery","clearSearchbar","CheckMarkLabel","passID","currentLabel","searchedLabel","concat","data-id","DropdownLabel","searchByLabel","DropdownItem","map","label","Dropdown_default","Item","key","as","components_CheckMarkLabel","DropdownButton_default","id","title","CheckMarkLanguage","currentLanguage","searchedLanguaged","DropdownLanguage","searchByLanguage","DropdownItems","language","components_CheckMarkLanguage","CheckMarkSort","searchedSort","currentSortOption","DropdownSort","searchBySort","option","components_CheckMarkSort","ResultsHeader","totalCount","Card_default","components_DropdownSort","components_DropdownLabel","components_DropdownLanguage","Labels","LabelsList","labels","style","backgroundColor","color","name","ResultsList","results","issuesReturn","items","item","html_url","components_Labels","body","number","text","date","Date","toString","monthDateSlice","slice","yearSlice","displayDate","created_at","user","login","comments","Welcome","NoResults","PaginationWidgetNumber","currentPage","selectedPage","selectPageNumber","PaginationWidget","pages","firstPage","lastPage","nextButton","previousButton","widget","page","components_PaginationWidgetNumber","Footer","Spinner","react_loader_spinner_default","type","height","width","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","issues","issuesCount","returnedAPI","spinner","errorMessage","sortOption","pageLink","setState","labelParameter","languageParameter","_this2","axios","get","Keys","clientID","clientSecret","then","res","headers","console","log","data","total_count","toLocaleString","link","split","length","returnLength","parseInt","err","message","event","target","_this3","dataset","searchNormal","_this4","_this5","_this6","ResultsListRender","showSpinner","callAPI","_this7","preventDefault","_this8","components_ResultsList","components_PaginationWidget","components_Spinner","components_NoResults","components_Welcome","_this9","ClearQuery","_this10","callApiFromWidget","_this11","_this12","_this13","pageNumber","isNaN","_this14","components_Header","components_Description","components_SearchBar","search","QueryRender","components_ResultsHeader","components_Footer","Component","ReactDOM","render","src_App_0","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4fc5c3ef.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\n\nconst Header = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"#home\">Issues Hunt</Navbar.Brand>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Description = () => {\n  return (\n    <div className=\"description\">\n      <div className=\"description-wrapper\">\n        <p>\n          Issues are used to keep track of tasks, bugs, and feature enhancments for your projects.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Description;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nconst SearchBar = (props) => {\n  const { searchIssues, input, searchInput } = props;\n\n  return (\n    <Form\n      className=\"SearchBar\"\n      onSubmit={searchIssues}\n      >\n      <InputGroup>\n        <FormControl\n          value={input}\n          onChange={searchInput}\n          placeholder=\"Search all issues..\"\n          aria-label=\"Search Input\"\n          aria-describedby=\"basic-addon2\"\n        />\n        <InputGroup.Append>\n          <Button\n            className=\"search-button\"\n            onClick={searchIssues}\n            >\n            Search\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </Form>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nconst ClearyQuery = (props) => {\n  const { clearSearchbar } = props;\n\n  return(\n    <div className=\"clear-query-container\">\n      <div\n        className=\"query-item\"\n        onClick={clearSearchbar}>\n        Clear search query and filters <i className=\"far fa-times-circle\"></i>\n      </div>\n    </div>\n  );\n}\n\nexport default ClearyQuery;\n","import React from 'react';\n\nconst CheckMarkLabel = (props) => {\n  const {\n    passID,\n    currentLabel,\n    searchedLabel\n  } = props;\n  \n  //add quotes to match props incoming from search query\n  //return check mark only if state matches current chosen label\n  if(`\"${currentLabel}\"` === searchedLabel) {\n    return (\n      <div data-id={passID}>\n        <i className=\"fas fa-check\"></i>\n      </div>\n    );\n  }\n  //return empty div as default\n  return (\n    <div\n      data-id={passID}\n      className=\"icon-box\"\n      >\n    </div>\n  );\n}\n\nexport default CheckMarkLabel;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport CheckMarkLabel from './CheckMarkLabel';\n\nconst DropdownLabel = (props) => {\n  //multiword search need a plus sign in query string\n  const labelNames = [\n    ['good+first+issue', 'Good First Issue'],\n    ['help+wanted', 'Help Wanted'],\n    ['discussion', 'Discussion'],\n    ['bug', 'Bug'],\n    ['hacktoberfest', 'Hacktoberfest']\n  ];\n\n  const { searchByLabel, searchedLabel } = props;\n\n  const DropdownItem = labelNames.map(label =>\n    <Dropdown.Item\n      key={label[0]}\n      as=\"button\"\n      data-id={label[0]}\n      onClick={searchByLabel}>\n      <div className=\"checkmark-list-wrapper\">\n        <div className=\"checkmark-wrapper\">\n          <CheckMarkLabel\n            passID={label[0]}\n            searchedLabel={searchedLabel}\n            currentLabel={label[0]}/>\n        </div>\n        <div\n          data-id={label[0]}\n          className=\"dropdown-text-wrapper\">\n          {label[1]}\n        </div>\n      </div>\n    </Dropdown.Item>\n  );\n\n  return(\n    <DropdownButton\n      id=\"LabelDropdown\"\n      title=\"Label\"\n      className=\"DropdownButton\">\n      {DropdownItem}\n    </DropdownButton>\n  );\n}\n\nexport default DropdownLabel;\n","import React from 'react';\n\nconst CheckMarkLanguage = (props) => {\n  const {\n    currentLanguage,\n    searchedLanguaged,\n    passID,\n  } = props;\n\n  //return check mark only if state matches current chosen language\n  if(currentLanguage === searchedLanguaged) {\n    return (\n      <div\n        data-id={passID}>\n        <i className=\"fas fa-check\"></i>\n      </div>\n    );\n  }\n  //return empty div as default\n  return (\n    <div\n      data-id={passID}\n      className=\"icon-box\">\n    </div>\n  );\n}\n\nexport default CheckMarkLanguage;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport CheckMarkLanguage from './CheckMarkLanguage';\n\nconst DropdownLanguage = (props) => {\n  const languageNames = [\n    'JavaScript',\n    'Python',\n    'Java',\n    'HTML',\n    'CSS',\n    'Ruby',\n    'C#',\n    'PHP',\n    'C++',\n  ];\n\n  const {\n    searchByLanguage,\n    searchedLanguaged,\n  } = props;\n\n//conditional rendering for checkmark in dropdown list\n  const DropdownItems = languageNames.map(language =>\n    <Dropdown.Item\n      key={language}\n      data-id={language}\n      onClick={searchByLanguage}>\n      <div className=\"checkmark-list-wrapper\">\n        <div className=\"checkmark-wrapper\">\n          <CheckMarkLanguage\n            passID={language}\n            searchedLanguaged={searchedLanguaged}\n            currentLanguage={language}/>\n        </div>\n        <div\n          data-id={language}\n          className=\"dropdown-text-wrapper\">\n          {language}\n        </div>\n      </div>\n    </Dropdown.Item>\n  );\n\n  return(\n    <DropdownButton\n      id=\"LanguageDropdown\"\n      title=\"Language\"\n      className=\"DropdownButton\">\n      {DropdownItems}\n    </DropdownButton>\n  );\n}\n\nexport default DropdownLanguage;\n","import React from 'react';\n\nconst CheckMarkSort = (props) => {\n  const {\n    searchedSort,\n    currentSortOption,\n    passID,\n  } = props;\n\n  //return check mark only if state matches current chosen language\n  if(searchedSort === currentSortOption) {\n    return (\n      <div\n        data-id={passID}>\n        <i className=\"fas fa-check\"></i>\n      </div>\n    );\n  }\n  //return empty div as default\n  return (\n    <div\n      data-id={passID}\n      className=\"icon-box\">\n    </div>\n  );\n}\n\nexport default CheckMarkSort;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport CheckMarkSort from './CheckMarkSort';\n//create sort checkmark\n\nconst DropdownSort = (props) => {\n  const sortOptions = [\n  ['', 'Best Match (default)'],\n  ['&sort=created&order=desc','Newest'],\n  ['&sort=created&order=asc', 'Oldest'],\n  ['&sort=comments&order=desc', 'Most Comments'],\n  ['&sort=comments&order=asc', 'Least Comments'],\n  ['&sort=Updated&order=desc', 'Recently Updated'],\n  ];\n\n  const {\n    searchBySort,\n    currentSortOption,\n  } = props;\n\n//conditional rendering for checkmark in dropdown list\n  const DropdownItems = sortOptions.map(option =>\n    <Dropdown.Item\n      key={option}\n      data-id={option[0]}\n      onClick={searchBySort}>\n      <div className=\"checkmark-list-wrapper\">\n        <div className=\"checkmark-wrapper\">\n          <CheckMarkSort\n            passID={option[0]}\n            searchedSort={option[0]}\n            currentSortOption={currentSortOption}/>\n        </div>\n        <div\n          data-id={option[0]}\n          className=\"dropdown-text-wrapper\">\n          {option[1]}\n        </div>\n      </div>\n    </Dropdown.Item>\n  );\n\n  return(\n    <DropdownButton\n      id=\"Dropdownsort\"\n      title=\"Sort\"\n      className=\"DropdownButton\">\n      {DropdownItems}\n    </DropdownButton>\n  );\n}\n\nexport default DropdownSort;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport DropdownLabel from './DropdownLabel';\nimport DropdownLanguage from './DropdownLanguage';\nimport DropdownSort from './DropdownSort';\n\nconst ResultsHeader = (props) => {\n  const {\n    totalCount,\n    searchedLabel,\n    searchByLabel,\n    searchedLanguaged,\n    searchByLanguage,\n    searchBySort,\n    currentSortOption\n  } = props;\n\n  return (\n    <Card className=\"ResultsHeader\">\n      <div className=\"open-issues\">\n        <i className=\"fas fa-exclamation-circle\"></i> {totalCount} Open\n      </div>\n      <DropdownSort\n        searchBySort={searchBySort}\n        currentSortOption={currentSortOption}/>\n      <DropdownLabel\n        searchedLabel={searchedLabel}\n        searchByLabel={searchByLabel} />\n      <DropdownLanguage\n        searchedLanguaged={searchedLanguaged}\n        searchByLanguage={searchByLanguage} />\n    </Card>\n  );\n}\n\nexport default ResultsHeader;\n","import React from 'react';\n\nconst Labels = (props) => {\n  const LabelsList = props.labels.map( label =>\n    <div\n      key={label.id}\n      style={{\"backgroundColor\": \"#\" + label.color}}\n      className=\"issue-label\">\n      {label.name}\n    </div>\n  );\n\n  return (\n    <div className=\"issues-label-container\">\n      {LabelsList}\n    </div>\n  );\n}\n\nexport default Labels;\n\n// item.\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Labels from './Labels.js';\n\n//convert utc to readable date\nconst displayDate = (text) => {\n  let date = new Date(text).toString();\n  let monthDateSlice = date.slice(4,10);\n  let yearSlice = date.slice(11,15);\n  return `${monthDateSlice}, ${yearSlice}`;\n}\n//adjust container at different screen sizes\nconst ResultsList = (props) => {\n  const results = props.issuesReturn.items.map(item =>\n    <Card key={item.id}>\n      <div className=\"issues-container\">\n        <div className=\"exclamation\">\n          <i className=\"fas fa-exclamation-circle fa-lg\"></i>\n        </div>\n        <div className=\"title-description-container\">\n          <div className=\"issues-label-wrapper\">\n            <p className=\"issues-title\">\n              <span className=\"issues-github-link\"></span>\n              <a href={item.html_url}>{item.title}</a>\n            </p>\n            <Labels labels={item.labels}/>\n          </div>\n          <div className=\"issues-body\">\n            <p className=\"issues-body-text\">{item.body}...</p>\n          </div>\n          <p className=\"issues-description\">\n            #{item.number} opened on {displayDate(item.created_at)} by <a href={item.user.html_url}>{item.user.login}</a>\n          </p>\n        </div>\n        <div className=\"comments\">\n          <a\n            className=\"comments-link\"\n            href={item.html_url}>\n            <i className=\"far fa-comment-alt\"></i> {item.comments}\n          </a>\n        </div>\n      </div>\n    </Card>\n  );\n\n  return (\n    <div className=\"results-list\">\n      {results}\n    </div>\n  );\n}\n\nexport default ResultsList;\n","import React from 'react';\n\nconst Welcome = () => {\n  return(\n    <div className=\"blank-container\">\n      <div className=\"error-handle-wrapper\">\n        <i className=\"fas fa-exclamation-circle fa-2x\"></i>\n        <div className=\"no-results-found\">\n          <h5>Welcome to Issues Hunt</h5>\n          <p>\n            Issues Hunt can help potential first-time GitHub contributors discover issues.\n            To get started, try searching for issues labeled with <span className=\"issue-label help-wanted\">help wanted</span> or <span className=\"issue-label good-first-issue\">good first issue</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Welcome;\n","import React from 'react';\n\nconst NoResults = () => {\n  return(\n    <div className=\"blank-container\">\n      <div className=\"error-handle-wrapper\">\n        <i className=\"fas fa-exclamation-circle fa-2x\"></i>\n        <div className=\"no-results-found\">\n          <h5>No Results found</h5>\n          <h5>Please try a different search parameter</h5>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NoResults;\n","import React from 'react';\n\nconst PaginationWidgetNumber = (props) => {\n  const {\n    currentPage,\n    selectedPage,\n    selectPageNumber\n  } = props;\n\n  if (currentPage === selectedPage) {\n    return(\n      <button\n        data-id={currentPage}\n        className=\"selected-page individual-number\"\n        onClick={selectPageNumber}>\n        {currentPage}\n      </button>\n    );\n  } else {\n    return(\n      <button\n        data-id={currentPage}\n        className=\"individual-number\"\n        onClick={selectPageNumber}>\n        {currentPage}\n      </button>\n    );\n  }\n}\n\nexport default PaginationWidgetNumber;\n","import React from 'react';\nimport PaginationWidgetNumber from './PaginationWidgetNumber';\n\nconst PaginationWidget = (props) => {\n  const {\n    firstPage,\n    lastPage,\n    selectedPage,\n    nextButton,\n    previousButton,\n    selectPageNumber\n  } = props\n\n  //conditional rendering for pages widget\n  let pages;\n  if (1 <= selectedPage <= 5) {\n    pages = [\n      firstPage,\n      firstPage +1,\n      firstPage +2,\n      firstPage +3,\n      firstPage +4,\n      '...',\n      lastPage\n    ];\n  }\n\n  if (selectedPage > 5 && selectedPage <= lastPage - 5) {\n    pages = [\n      firstPage,\n      '..',\n      selectedPage-1,\n      selectedPage,\n      selectedPage +1,\n      '...',\n      lastPage\n    ];\n  }\n\n  if (selectedPage >= lastPage - 4 && selectedPage <= lastPage) {\n    pages = [\n      firstPage,\n      '...',\n      lastPage -4,\n      lastPage -3,\n      lastPage -2,\n      lastPage -1,\n      lastPage\n    ];\n  }\n\n  const widget = pages.map(page =>\n    <PaginationWidgetNumber\n      key={page}\n      currentPage={page}\n      selectedPage={selectedPage}\n      selectPageNumber={selectPageNumber} />\n  );\n\n  return (\n    <div className=\"widget-container\">\n      <button\n        className=\"previous-button\"\n        onClick={previousButton}>\n        Previous\n      </button>\n      {widget}\n      <button\n        className=\"next-button\"\n        onClick={nextButton}>\n        Next\n      </button>\n    </div>\n  );\n}\n\nexport default PaginationWidget;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      {/* © 2019 Fu-Lin Liu */}\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Loader from 'react-loader-spinner'\n\nconst Spinner = () => {\n  return (\n    <div className=\"blank-container\">\n      <div className=\"spinner-container\">\n        <Loader\n          type=\"TailSpin\"\n          color=\"#00BFFF\"\n          height=\"75\"\n          width=\"75\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Keys from './config/keys';\n\nimport Header from './components/Header';\nimport Description from './components/Description';\nimport SearchBar from './components/SearchBar';\nimport ClearQuery from './components/ClearQuery';\nimport ResultsHeader from './components/ResultsHeader'\nimport ResultsList from './components/ResultsList';\nimport Welcome from './components/Welcome';\nimport NoResults from './components/NoResults';\nimport PaginationWidget from './components/PaginationWidget';\nimport Footer from './components/Footer';\nimport Spinner from './components/Spinner';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issues: '',\n      issuesCount: \"0\",\n      returnedAPI: 'no',\n      spinner: 'hide',\n      errorMessage: '',\n      input:'',\n      language:'',\n      label:'',\n      sortOption: '',\n      pageLink: '',\n      firstPage: 1,\n      lastPage: 15,\n      selectedPage: 1\n    };\n  }\n\n  showSpinner() {\n    this.setState({\n      returnedAPI:'pending',\n      spinner: 'show',\n    });\n  }\n\n  callAPI() {\n    const value = this.state.input;\n    //return empty string for parameter if no label, language, or sortOption is selected\n    //empty parameters dont work well in query string\n    let labelParameter;\n    if (this.state.label === '') {\n      labelParameter = '';\n    } else {\n      labelParameter = `+label:${this.state.label}`;\n    }\n    //set language parameter\n    let languageParameter;\n    if (this.state.language === '') {\n      languageParameter = '';\n    } else {\n      languageParameter = `+language:${this.state.language}`;\n    }\n    //set sort option\n    let sortOption;\n    if(this.state.sortOption === '') {\n      sortOption = '';\n    } else {\n      //parameters already set in DropdownSort.js\n      sortOption = sortOption = this.state.sortOption;\n    }\n\n    axios.get(`https://api.github.com/search/issues?q=${value}+state:open${labelParameter}${languageParameter}&client_id=${Keys.clientID}&client_secret=${Keys.clientSecret}${sortOption}&per_page=25`)\n     .then(res => {\n       // console.log(res.data);\n       console.log(res.headers);\n       let headers;\n       let pageLink;\n       //set as 0 as default\n       let lastPage = 0;\n       //only run logic if results are more than 0\n       //link isnt sent when there are no results\n       if (res.data.total_count.toLocaleString() !== '0' && res.headers.link === true) {\n         headers = res.headers.link.split(';')\n         //logic to get pageLink\n         pageLink = headers[0].slice(1, headers[0].length - 2);\n         //logic to grab last page number from header and updateState\n         lastPage = headers[1].split('=');\n         let returnLength = lastPage.length - 1;\n         lastPage = lastPage[returnLength].slice(0, lastPage[returnLength].length - 1);\n       }\n       this.setState({\n         issues: res.data,\n         issuesCount: res.data.total_count.toLocaleString(), //returns a language-sensitive represenation of string\n         returnedAPI: 'yes',\n         spinner: 'hide',\n         lastPage: parseInt(lastPage),\n         pageLink: pageLink\n       });\n     },\n     err => {\n       console.log(err.message);\n       this.setState({errorMessage: err.message});\n     })\n  }\n\n  //hold value in searchbar\n  searchInput(event) {\n    this.setState({input: event.target.value});\n  }\n\n  //quotes are used for search query\n  searchByLabel(event) {\n    //disable buttons when waiting for API\n    //when spinner is showing\n    if (this.state.spinner === 'show') {\n      return;\n    } else {\n      this.setState({\n        label: `\"${event.target.dataset.id}\"`,\n        selectedPage: 1\n      },\n        () => this.searchNormal()\n      );\n    }\n  }\n\n  searchByLanguage(event) {\n    if (this.state.spinner === 'show') {\n      console.log('clicked');\n      return;\n    } else {\n      this.setState({\n        language: event.target.dataset.id,\n        selectedPage: 1\n      },\n        () => this.searchNormal()\n      );\n    }\n  }\n\n  searchBySort(event) {\n    if (this.state.spinner === 'show') {\n      return;\n    } else {\n      this.setState({\n        sortOption: event.target.dataset.id,\n        selectedPage: 1\n      },\n        () => this.searchNormal()\n      );\n    }\n  }\n\n  clearSearchbar() {\n    this.setState({\n      issues: '',\n      issuesCount: \"0\",\n      input: '',\n      language: '',\n      label: '',\n      sortOption: ''\n    },\n      () => this.ResultsListRender()\n    );\n  }\n\n  //event.preventDefault not working in callback\n  searchNormal() {\n    this.showSpinner();\n    this.callAPI();\n  }\n\n  //only search for open issues\n  search(event) {\n    event.preventDefault();\n    this.showSpinner();\n    //clear any parameters before making new search\n    this.setState({\n      issues: '',\n      issuesCount: \"0\",\n      language: '',\n      label: '',\n      sortOption: ''\n    },\n      () => this.callAPI()\n    );\n  }\n\n  ResultsListRender() {\n    if (this.state.returnedAPI === 'yes' && this.state.issues !== '' && this.state.issuesCount !== \"0\" ) {\n      return (\n        <div>\n          <ResultsList issuesReturn={this.state.issues} />\n          <PaginationWidget\n            selectPageNumber={event => this.selectPageNumber(event)}\n            nextButton={event => this.nextButton(event)}\n            previousButton={event => this.previousButton(event)}\n            firstPage={this.state.firstPage}\n            lastPage={this.state.lastPage}\n            selectedPage={this.state.selectedPage} />\n        </div>\n      );\n    }\n    if (this.state.spinner ==='show' && this.state.returnedAPI !== 'yes' ) {\n      return <Spinner />;\n    }\n    //error handling if no issues returned\n    if (this.state.issuesCount === \"0\" && this.state.issues !== '') {\n      return <NoResults />;\n    //on load no issues in state\n    } if (this.state.issues === '') {\n      return <Welcome />;\n    }\n    return <Welcome/>;\n  }\n\n  QueryRender() {\n    if (this.state.input !== '' || this.state.language !== '' || this.state.label !== '' || this.state.issues !== '') {\n      return <ClearQuery clearSearchbar={event => this.clearSearchbar(event)} />;\n    }\n    return null;\n  }\n\n  //Widget previous and next buttons\n  previousButton(event) {\n    event.preventDefault();\n    if (this.state.selectedPage !== 1) {\n      this.showSpinner();\n      this.setState({\n        selectedPage: this.state.selectedPage - 1\n      },\n        () => this.callApiFromWidget()\n      );\n    }\n  }\n\n  nextButton(event) {\n    event.preventDefault();\n    if (this.state.selectedPage < this.state.lastPage) {\n      this.showSpinner();\n      this.setState({\n        selectedPage: this.state.selectedPage + 1\n      },\n        () => this.callApiFromWidget()\n      );\n    } else {\n      this.setState({\n        selectedPage: this.state.selectedPage\n      });\n    }\n  }\n\n  callApiFromWidget() {\n    axios.get(`${this.state.pageLink}${this.state.selectedPage}`)\n     .then(res => {\n       console.log(res.data);\n       console.log(res.headers);\n       this.setState({\n         issues: res.data,\n         returnedAPI: 'yes',\n         spinner: 'hide'\n       });\n     },\n     err => {\n       console.log(err.message);\n       this.setState({errorMessage: err.message});\n     })\n  }\n\n  selectPageNumber(event) {\n    event.preventDefault();\n    //convert string to number\n    let pageNumber =parseInt(event.target.dataset.id);\n    //only update state if it is a number\n    if(isNaN(pageNumber)) {\n      return;\n    } else {\n      this.showSpinner();\n      this.setState({\n        selectedPage: pageNumber,\n      },\n        () => this.callApiFromWidget()\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <Description />\n          <SearchBar\n            searchInput={event => this.searchInput(event)}\n            searchIssues={event => this.search(event)}\n            input={this.state.input}\n          />\n          {this.QueryRender()}\n          <ResultsHeader\n            searchBySort={event => this.searchBySort(event)}\n            currentSortOption={this.state.sortOption}\n            searchedLabel={this.state.label}\n            searchedLanguaged={this.state.language}\n            totalCount={this.state.issuesCount}\n            searchByLabel={event => this.searchByLabel(event)}\n            searchByLanguage={event => this.searchByLanguage(event)}\n          />\n          {this.ResultsListRender()}\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","//production keys, do commit\n\nmodule.exports = {\n  clientID: '19b336af5cfb0ed688a1',\n  clientSecret:'4849a46d86d872e9fb533a298664a16e4ee5e9cd'\n};\n"],"sourceRoot":""}